apiVersion: v1
kind: ConfigMap
metadata:
  name: amqpprovider
data:
  PORT: "8080"
  DB_PREFIX: "whisk_amqp_"
  CONTROLLER_HOST: "controller"
  CONTROLLER_PORT: "8080"
  env: |
    export TOKEN="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)"
    export NAMESPACE="$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: amqpprovider
  labels:
    name: amqpprovider
spec:
  replicas: 1
  selector:
    matchLabels:
      name: amqpprovider
  template:
    metadata:
      labels:
        name: amqpprovider
    spec:
      restartPolicy: Always
      volumes:
      - name: amqpprovider-config
        configMap:
          name: amqpprovider
      containers:
      - name: amqpprovider
        imagePullPolicy: IfNotPresent
        image: cliffjansen/amqpprovider:openshift-latest
        command: [ "/bin/bash", "-c", "source /amqpprovider_config/env; node /amqpTrigger/app.js" ]
        envFrom:
        - configMapRef:
            name: amqpprovider
        env:
        - name: "DB_HOST"
          value: "$(COUCHDB_SERVICE_HOST):$(COUCHDB_SERVICE_PORT_COUCHDB)"
        - name:  "DB_PROTOCOL"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_protocol
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_username
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_password
        - name:  "ROUTER_HOST"
          value: "$(NGINX_SERVICE_HOST)"
        volumeMounts:
        - name: amqpprovider-config
          mountPath: "/amqpprovider_config"
      initContainers:
      - name: install-amqp-catalog
        imagePullPolicy: IfNotPresent
        image: cliffjansen/whisk_amqp:openshift-latest
        envFrom:
        - configMapRef:
            name: amqpprovider
        env:
        - name: "DB_HOST"
          value: "$(COUCHDB_SERVICE_HOST):$(COUCHDB_SERVICE_PORT_COUCHDB)"
        - name:  "DB_PROTOCOL"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_protocol
        - name: "AUTH_WHISK_SYSTEM"
          valueFrom:
            secretKeyRef:
              name: whisk.auth
              key: system
        - name:  "ROUTER_HOST"
          value: "$(NGINX_SERVICE_HOST)"
        volumeMounts:
        - name: amqpprovider-config
          mountPath: "/amqpprovider_config"
