apiVersion: v1
kind: Template
metadata:
  name: amqp-openwhisk-package
  annotations:
    description: AMQP feed provider package for OpenWhisk
    tags: openwhisk
labels:
  template: amqp-openwhisk-package

objects:

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: amqpprovider
  data:
    PORT: "8080"
    DB_PREFIX: "whisk_amqp_"
    CONTROLLER_HOST: "controller"
    CONTROLLER_PORT: "8080"
    env: |
      export TOKEN="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)"
      export NAMESPACE="$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)"
      export ROUTER_HOST=$(curl -s --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H "Authorization: Bearer ${TOKEN}" "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/oapi/v1/namespaces/${NAMESPACE}/routes/openwhisk?pretty=true" | grep '"host":' | head -n 1 | awk -F '"' '{print $4}')
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: amqpprovider
    labels:
      name: amqpprovider
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          name: amqpprovider
      spec:
        restartPolicy: Always
        serviceAccountName: openwhisk
        volumes:
        - name: amqpprovider-config
          configMap:
            name: amqpprovider
        containers:
        - name: amqpprovider
          imagePullPolicy: IfNotPresent
          image: cliffjansen/amqpprovider:openshift-latest
          command: [ "/bin/bash", "-c", "source /amqpprovider_config/env; node /amqpTrigger/app.js" ]
          envFrom:
          - configMapRef:
              name: amqpprovider
          env:
          - name: "DB_HOST"
            value: "$(COUCHDB_SERVICE_HOST):$(COUCHDB_SERVICE_PORT_COUCHDB)"
          - name:  "DB_PROTOCOL"
            valueFrom:
              configMapKeyRef:
                name: db.config
                key: db_protocol
          - name: "DB_USERNAME"
            valueFrom:
              secretKeyRef:
                name: db.auth
                key: db_username
          - name: "DB_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: db.auth
                key: db_password
          volumeMounts:
          - name: amqpprovider-config
            mountPath: "/amqpprovider_config"
        initContainers:
        - name: wait-for-couchdb
          image: busybox:whisky
          command: ['sh', '-cu', 'echo "$COUCHDB_SERVICE_HOST"']
        - name: install-amqp-catalog
          imagePullPolicy: IfNotPresent
          image: cliffjansen/whisk_amqp:openshift-latest
          envFrom:
          - configMapRef:
              name: amqpprovider
          env:
          - name: "DB_HOST"
            value: "$(COUCHDB_SERVICE_HOST):$(COUCHDB_SERVICE_PORT_COUCHDB)"
          - name:  "DB_PROTOCOL"
            valueFrom:
              configMapKeyRef:
                name: db.config
                key: db_protocol
          - name: "AUTH_WHISK_SYSTEM"
            valueFrom:
              secretKeyRef:
                name: whisk.auth
                key: system
          volumeMounts:
          - name: amqpprovider-config
            mountPath: "/amqpprovider_config"
